version: 2
jobs:
  buildApp:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
      #- image: microsoft/azure-cli
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is 
          - v1-dependencies-

      - run: npm install
      #- run: npm build  
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Creating Artifacts & Setting up Deployment Enviornment
          command: |
            echo "my artifact file" > /tmp/artifact-1;
            mkdir /tmp/artifacts;
            tar -zcvf /tmp/artifacts/archive-name.tar.gz *
            echo "my artifact files in a dir" > /tmp/artifacts/artifact-2; 
            
      - store_artifacts:
          path:  /tmp/artifacts
          destination: artifact-file

      #- store_artifacts:
       #   path:  /tmp/artifacts
      # run tests!
      #- run: npm run test
      - run:
          name: Deploy Azure Infrastructure
          command: |
            git status
            git remote add azure https://$AZURE_DEPLOY_USER:$AZURE_DEPLOY_PASS@$AZURE_GIT_DEPLOY_URL
            git push azure
  provisionAZWebApp:
    docker:
      - image: microsoft/azure-cli:latest
    steps:
      # LOGIN ONTO AZURE WITH EXISTING SERVICE PRINCIPAL 
        - run: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            az login --service-principal -u $AZURE_SERVICE_PRINC --password $AZURE_SERVICE_PRINC_PASSWORD --tenant $AZURE_TENANT
            az appservice plan create -g $AZ_RESOURCE_GRP -n $AZ_SERVICE_PLAN
            az webapp create -g $AZ_RESOURCE_GRP -p $AZ_SERVICE_PLAN -n $AZ_WEBAPP_NAME --deployment-local-git
          fi
  unProvisionAZWebApp:
    docker:
      - image: microsoft/azure-cli:latest
    steps:
      # LOGIN ONTO AZURE WITH EXISTING SERVICE PRINCIPALe
      - run: |
          az login --service-principal -u $AZURE_SERVICE_PRINC --password $AZURE_SERVICE_PRINC_PASSWORD --tenant $AZURE_TENANT
          az webapp delete -n $AZ_WEBAPP_NAME -g $AZ_RESOURCE_GRP                
workflows:
  version: 2
  provision_build_and_deploy:
    jobs:
     - provisionAZWebApp
     - buildApp:
          requires:
            - provisionAZWebApp
     - unProvisionAZWebApp:
          type: approval
          requires:
           - buildApp       