version: 2
jobs:
  ContinuousIntegration:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
      #- image: microsoft/azure-cli
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is 
          - v1-dependencies-

      - run: npm build
      #- run: npm build  
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Creating Artifacts 
          command: |
            echo "my artifact file" > /tmp/artifact-1;
            mkdir /tmp/artifacts;
            tar -zcvf /tmp/artifacts/archive-name.tar.gz *
            echo "my artifact files in a dir" > /tmp/artifacts/artifact-2; 
            
      - store_artifacts:
          path:  /tmp/artifacts
          destination: artifact-file

      #- store_artifacts:
       #   path:  /tmp/artifacts
      # run tests!
      #- run: npm run test
      - run:
          name: Quality Scan [Sonarqube]
          command: |
            echo "SonarQube Scan"
      - run:
          name: Package Artifacts [Nexus]
          command: |
            echo "Nexus Stor"      
  ContinuousDeployment:
    docker:
      - image: microsoft/azure-cli:latest
    steps:
      # LOGIN ONTO AZURE WITH EXISTING SERVICE PRINCIPAL 
      - run:
          name: Provision UAT Infrastructure
          command: |
            echo "provision Infrastructur"  
      - run:
          name: Apply SIT Configuration
          command: |
            echo "Apply SIT Configuration"  
      - run:
          name: Deploy SIT
          command: |
            echo "Deploy SIT"  
      - run:
          name: SIT Security Source Scan
          command: |
            echo "SIT Security Source Scan"                      
  unProvisionDeploy:
    docker:
      - image: microsoft/azure-cli:latest
    steps:
      # LOGIN ONTO AZURE WITH EXISTING SERVICE PRINCIPALe
      - run: |
          echo "mlogin"             
workflows:
  version: 2
  provision_build_and_deploy:
    jobs:
     - ContinuousIntegration
     - ContinuousDeployment:
          requires:
            - ContinuousIntegration
     - unProvisionDeploy:
          type: approval
          requires:
           - ContinuousDeployment       
